<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <!--开启注解处理器-->
    <context:annotation-config/>
    <!-- 开启组件扫描，自动扫描web包 ,将带有注解的类 纳入spring容器管理 -->
    <context:component-scan base-package="com"/>
    <!--支持注解-->
    <tx:annotation-driven/>

    <!--PropertyPlaceholderConfigurer是个bean工厂后置处理器的实现，也就是 BeanFactoryPostProcessor接口的一个实现。PropertyPlaceholderConfigurer可以将上下文（配置文 件）中的属性值放在另一个单独的标准java Properties文件中去。在XML文件中用${key}替换指定的properties文件中的值。这样的话，只需要对properties文件进 行修改，而不用对xml配置文件进行修改-->
    <bean id="configurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <value>classpath*:database.properties</value>
        </property>
    </bean>

    <bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
        <property name="driver">
            <value>${proxool.driver}</value>
        </property>
        <property name="driverUrl">
            <value>${proxool.url}</value>
        </property>
        <property name="user">
            <value>${proxool.username}</value>
        </property>
        <property name="password">
            <value>${proxool.password}</value>
        </property>
        <property name="alias">
            <value>${proxool.alias}</value>
        </property>
        <property name="simultaneousBuildThrottle">
            <value>${proxool.simultaneousBuildThrottle}</value>
        </property>
        <property name="maximumConnectionCount">
            <value>${proxool.maximumConnectionCount}</value>
        </property>
        <property name="minimumConnectionCount">
            <value>${proxool.minimumConnectionCount}</value>
        </property>
    </bean>

    <!-- （把数据源注入给session工厂）、配置映射文件将Spring与hibernate初步整合起来 -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="configLocation">
            <value>classpath:hibernate.cfg.xml</value>
        </property>
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
    </bean>

    <!-- 配置声明式的事务管理（采用基于注解的方式）session工厂注入到事务管理器transactionManager使Spring与Hinbernate整合实现业务逻辑   -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

</beans>